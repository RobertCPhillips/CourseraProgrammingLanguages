(* Homework1 Simple Test *)
(* These are basic test cases. Passing these tests does not guarantee that your code will pass the actual homework grader *)
(* To run the test, add a new line to the top of this file: use "homeworkname.sml"; *)
(* All the tests should evaluate to true. For example, the REPL should say: val test1 = true : bool *)

use "hw1.sml";

(* assignment 1 tests *)
val test1_1_2_3_isOlderThan_2_3_4 = is_older((1,2,3),(2,3,4)) = true

val test1_2_3_4_isNotOlderThan_1_2_3 = is_older((2,3,4),(1,2,3)) = false
val test1_2_3_4_isNotOlderThan_2_2_3 = is_older((2,3,4),(2,2,3)) = false
val test1_2_3_4_IsNotOlderThan_2_3_3 = is_older((2,3,4),(2,3,3)) = false

val test1_1_2_3_isOlderThan_1_3_4 = is_older((1,2,3),(1,3,4)) = true
val test1_1_2_3_isOlderThan_1_2_4 = is_older((1,2,3),(1,2,4)) = true
val test1_1_2_3_isNotOlderThan_1_2_3 = is_older((1,2,3),(1,2,3)) = false

(* assignment 2 tests *)
val test2a = number_in_month([(2012,2,28),(2013,12,1)],2) = 1
val test2b = number_in_month([(2012,2,28),(2013,12,1)],3) = 0
val test2c = number_in_month([(2012,4,28),(2013,4,1)],4) = 2

(* assignment 3 tests *)
val test3a = number_in_months([(2012,2,28),(2013,12,1),(2011,3,31),(2011,4,28)],[2,3,4]) = 3
val test3b = number_in_months([(2012,2,28),(2013,12,1),(2011,3,31),(2011,4,28)],[2,3,4,12]) = 4
val test3c = number_in_months([(2012,2,28),(2013,12,1),(2011,3,31),(2011,4,28)],[2]) = 1
val test3d = number_in_months([(2012,2,28),(2013,12,1),(2011,3,31),(2011,4,28)],[8,9]) = 0
val test3e = number_in_months([(2012,2,28),(2013,12,1),(2011,3,31),(2011,4,28)],[]) = 0
val test3f = number_in_months([],[2,3,4]) = 0
val test3g = number_in_months([],[]) = 0

val test4a = dates_in_month([(2012,2,28),(2013,12,1)],2) = [(2012,2,28)]
val test4b = dates_in_month([(2012,2,28),(2013,12,1),(2013,2,1)],2) = [(2012,2,28),(2013,2,1)]
val test4c = number_in_months([(2012,2,28),(2013,12,1)],[]) = []
val test4d = number_in_months([],2) = []

(*
val test5 = dates_in_months([(2012,2,28),(2013,12,1),(2011,3,31),(2011,4,28)],[2,3,4]) = [(2012,2,28),(2011,3,31),(2011,4,28)]

val test6 = get_nth(["hi", "there", "how", "are", "you"], 2) = "there"

val test7 = date_to_string((2013, 6, 1)) = "June 1, 2013"

val test8 = number_before_reaching_sum(10, [1,2,3,4,5]) = 3

val test9 = what_month(70) = 3

val test10 = month_range(31, 34) = [1,2,2,2]

val test11 = oldest([(2012,2,28),(2011,3,31),(2011,4,28)]) = SOME (2011,3,31)
*)
